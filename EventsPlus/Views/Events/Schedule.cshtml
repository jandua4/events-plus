@model PaginatedList<EventsPlus.Models.Event>

@{
    ViewData["Title"] = "Schedule";
}

<h1>Schedule</h1>

<p>Hello there! Can't see the whole table? Try scrolling the table side-to-side!</p>
<form asp-action="Schedule" method="get">
    <div class="form-actions no-color">
        <p>
            Search By Name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="search-btn" /> |
            <a asp-action="Schedule">Back to Full List</a>
        </p>
    </div>
</form>
<div class="table-container">
    <table class="table table-borderless table-striped">
        <thead>
            <tr>
                <th>
                    Name
                </th>
                <th>
                    Start Time
                </th>
                <th>
                    Location
                </th>
                <th>
                    Duration
                </th>
                <th>
                    Description
                </th>
                <th>
                    Event Type
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StartTime)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Location)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Duration)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EventType.Type)
                    </td>
                    <td>
                        <a asp-action="Register" asp-controller="Events" asp-route-id="@item.EventID">Register</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Schedule"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Schedule"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>